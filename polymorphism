(* # Polymorphism is defined as  one object can behave in  multiple forms
#implementing polymorphism in 4 ways 
#1.Duck typing 2.Operator overloading 3.Method overloading 4.Method overriding *)
(*Duck typing in python:
-->>In standard languages like c,c++or java we wanrt to define type of an object
-->> But in python it's different ,there is no need of declaring a type
--->> so,we don't check the type of an object,we only care about that particular object have required method /behaviour
*)
Ex:
class Duck:
    def quack(self):
       print("quack quack")
class dog:
    def quack(self):
      print("I can bark but trying to quack... Woof-Quack!quack")
def make_it_quack(thing):
    thing.quack()
duck=duck()
duck.quack()
dog=dog()
dog.quack()
